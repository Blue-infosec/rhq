version: 2
jobs:
  deploy:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/rhq
    parameters:
      profile-name:
        description: Profile name to be configured.
        type: string
        default: default
      aws-access-key-id:
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
        default: AWS_ACCESS_KEY_ID
      aws-secret-access-key:
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: env_var_name
        default: AWS_SECRET_ACCESS_KEY
      aws-region:
        description: |
          Env var of AWS region to operate in
          (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
        default: "us-east-1"
      configure-default-region:
        description: >
          Some AWS actions don't require a region; set this to false if you do not
          want to store a default region in ~/.aws/config
        type: boolean
        default: true
    steps:
      - checkout
      - run:
          name: Remove git
          command: rm -rf .git && rm -rf .gitignore && rm -rf .circleci
      - run:
          name: Install dependencies
          command: sudo pip install awscli mkdocs mkdocs-material pymdown-extensions pygments
      - run:
          name: Configure AWS Access Key ID
          command: |
            aws configure set aws_access_key_id \
            $<<parameters.aws-access-key-id>> \
            --profile <<parameters.profile-name>>
      - run:
          name: Configure AWS Secret Access Key
          command: |
            aws configure set aws_secret_access_key \
            $<<parameters.aws-secret-access-key>> \
            --profile <<parameters.profile-name>>
      - run:
          name: Build
          command: mkdocs build
      - run:
          name: Deploy to S3
          branch: master
          command: aws s3 sync site/ s3://rhq.reconinfosec.com/ --delete --region us-east-1
      - run:
          name: Invalidate cloudfront distribution
          branch: master
          command: aws cloudfront create-invalidation --distribution-id E3RRROHKOEZQNJ --paths "/*"

workflows:
  version: 2
  build-deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: master
